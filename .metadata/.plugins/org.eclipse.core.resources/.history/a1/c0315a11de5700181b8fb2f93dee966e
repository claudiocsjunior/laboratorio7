/**
* @file   produto.h
* @brief  Responsável por gerênciar os produtos
* @author Claudio da Cruz Silva Junior
* @since  12/05/2018
* @date   12/05/2018
*/

#include <iostream> /**< Inclusão da lib iostream*/
#include "../include/produto.h" /**< Inclusão da classe produto.h*/

Produto::Produto() {}

Produto::~Produto(){}

Produto::Produto(std::string _codigo, std::string _descricao, double _preco):
	m_cod_barras(_codigo), m_descricao(_descricao), m_preco(_preco) {}

std::string 
Produto::getCodBarras() {
	return m_cod_barras;
}
	
std::string 
Produto::getDescricao() {
	return m_descricao;
}

double 
Produto::getPreco() {
	return m_preco;
}
	
void 
Produto::setCodBarras(std::string _codigo) {
	m_cod_barras = _codigo;
}

void 
Produto::setDescricao(std::string _descricao) {
	m_descricao = _descricao;
}

void 
Produto::setPreco(double _preco) {
	m_preco = _preco;
}

std::ostream& operator<< (std::ostream &o, Produto const &p) {
	return p.print(o);
}

double Produto::operator +(Produto& produtoSomado) {
	return (m_preco + produtoSomado.getPreco());
}

double Produto::operator -(Produto& produtoSubtraido) {
	return (m_preco - produtoSubtraido.getPreco());
}

bool Produto::operator ==(Produto& produtoComparado){
	if(m_cod_barras.compare(produtoComparado.getCodBarras()) == 0)
		return true;
	else
		return false;
}
