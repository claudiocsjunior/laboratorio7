/**
* @file   produto.h
* @brief  Classe base responsável por gerênciar os produtos
* @author Claudio da Cruz Silva Junior
* @since  12/05/2018
* @date   12/05/2018
*/

#ifndef _PRODUTO_H_  /**< Verifica se a variável _PRODUTO_H_ foi definida*/
#define _PRODUTO_H_	 /**< Define a variável _PRODUTO_H_*/

#include <iostream>

class Produto
{
public:
	Produto(); /**< Construtor padrão da Classe*/
	Produto(std::string _codigo, std::string _descricao, double _preco); /**< Construtor parametrizado da Classe*/
	virtual ~Produto(); /**< Destrutor da Classe*/
protected:
	std::string m_cod_barras; /**< Variável para armazenar o codigo de barras*/
	std::string m_descricao; /**< Variável para armazenar a descrição do produto*/
	double m_preco;	/**< Variável para armazenar o preço do produto*/
public:
	// getters
	std::string getCodBarras();
	std::string getDescricao();
	double getPreco();
	// setters
	void setCodBarras(std::string _codigo);
	void setDescricao(std::string _descricao);
	void setPreco(double _preco);
	//
	friend std::ostream& operator<< (std::ostream &o, Produto const &t);  
	double operator+(Produto &produtoSomado);
	double operator-(Produto &produtoSubtraido);
	bool operator==(Produto &produtoComparado);
private: /**< Local para declaração de métodos e atributos privados*/
	virtual std::ostream& print(std::ostream&) const = 0;
};
 
#endif
